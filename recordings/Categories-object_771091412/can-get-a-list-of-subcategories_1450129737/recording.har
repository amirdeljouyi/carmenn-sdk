{
  "log": {
    "_recordingName": "Categories object/can get a list of subcategories",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "4.3.0"
    },
    "entries": [
      {
        "_id": "792b5d5f4ba54369e5e5a8c757a8df98",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 644,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "644"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "localhost:8000"
            }
          ],
          "headersSize": 254,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "[{\"operationName\":\"CategoryChildrenList\",\"variables\":{\"first\":20,\"id\":\"Q2F0ZWdvcnk6Nw==\"},\"query\":\"fragment BaseCategory on Category {\\n  id\\n  name\\n  slug\\n  __typename\\n}\\n\\nfragment PageInfo on PageInfo {\\n  endCursor\\n  hasNextPage\\n  __typename\\n}\\n\\nquery CategoryChildrenList($id: ID!, $first: Int!, $after: String) {\\n  category(id: $id) {\\n    id\\n    children(first: $first, after: $after) {\\n      edges {\\n        node {\\n          ...BaseCategory\\n          __typename\\n        }\\n        __typename\\n      }\\n      pageInfo {\\n        ...PageInfo\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}]"
          },
          "queryString": [],
          "url": "http://localhost:8000/graphql/"
        },
        "response": {
          "bodySize": 1544,
          "content": {
            "mimeType": "application/json",
            "size": 1544,
            "text": "[{\"errors\": [{\"message\": \"resolve_connection() got an unexpected keyword argument 'max_limit'\", \"locations\": [{\"line\": 17, \"column\": 5}], \"path\": [\"category\", \"children\"], \"extensions\": {\"exception\": {\"code\": \"TypeError\", \"stacktrace\": [\"Traceback (most recent call last):\", \"  File \\\"/media/development/Software Development/Programming/Web Based/Proje/Carmenn/Backend/env/lib/python3.8/site-packages/promise/promise.py\\\", line 489, in _resolve_from_executor\", \"    executor(resolve, reject)\", \"  File \\\"/media/development/Software Development/Programming/Web Based/Proje/Carmenn/Backend/env/lib/python3.8/site-packages/promise/promise.py\\\", line 756, in executor\", \"    return resolve(f(*args, **kwargs))\", \"  File \\\"/media/development/Software Development/Programming/Web Based/Proje/Carmenn/Backend/env/lib/python3.8/site-packages/graphql/execution/middleware.py\\\", line 75, in make_it_promise\", \"    return next(*args, **kwargs)\", \"  File \\\"/media/development/Software Development/Programming/Web Based/Proje/Carmenn/Backend/graphql_apis/core/fields.py\\\", line 110, in connection_resolver\", \"    return super().connection_resolver(\", \"  File \\\"/media/development/Software Development/Programming/Web Based/Proje/Carmenn/Backend/env/lib/python3.8/site-packages/graphene_django/fields.py\\\", line 218, in connection_resolver\", \"    return on_resolve(iterable)\", \"TypeError: resolve_connection() got an unexpected keyword argument 'max_limit'\"]}}}], \"data\": {\"category\": {\"id\": \"Q2F0ZWdvcnk6Nw==\", \"children\": null, \"__typename\": \"Category\"}}}]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Sat, 17 Oct 2020 21:41:08 GMT"
            },
            {
              "name": "server",
              "value": "WSGIServer/0.2 CPython/3.8.5"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "vary",
              "value": "Accept-Language, Origin"
            },
            {
              "name": "content-language",
              "value": "en"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "content-length",
              "value": "1544"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "referrer-policy",
              "value": "same-origin"
            }
          ],
          "headersSize": 270,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-17T21:41:08.785Z",
        "time": 142,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 142
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
